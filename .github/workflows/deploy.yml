name: Deploy Spring Boot App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java and Build with Gradle
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run Gradle Build
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: Deploy Application to EC2
        run: |
          JAR_FILE=$(find build/libs -name "springboot-JWT-1.0-SNAPSHOT.jar")
          
          if [ -z "$JAR_FILE" ]; then
            echo "JAR file not found in build/libs/. Check your build output."
            exit 1
          fi
          echo "Found JAR file: $JAR_FILE"
          JAR_NAME=$(basename "$JAR_FILE")

          SSH_CONTROL_PATH="/tmp/ssh-control-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}"

          echo ">> Rsync 시작"
          rsync -avz --progress -e "ssh -o StrictHostKeyChecking=no -o ControlMaster=auto -o ControlPersist=60s -o ControlPath=${SSH_CONTROL_PATH}" \
              "$JAR_FILE" \
              ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/$JAR_NAME
          echo ">> Rsync 완료"

          echo ">> EC2 서버에서 애플리케이션 재시작"
          
          ssh -o StrictHostKeyChecking=no -o BatchMode=yes -o ExitOnForwardFailure=yes -T -n -o ControlPath="${SSH_CONTROL_PATH}" \
              ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
              pkill -f 'springboot-JWT-1.0-SNAPSHOT.jar' || true
          
              export SPRING_DATA_REDIS_HOST="${{ secrets.REDIS_ENDPOINT }}" 
              export SPRING_DATA_REDIS_PORT="${{ secrets.REDIS_PORT }}"     
          
              nohup java -jar -Dspring.profiles.active=prod \
                /home/${{ secrets.EC2_USERNAME }}/springboot-JWT-1.0-SNAPSHOT.jar > /home/${{ secrets.EC2_USERNAME }}/application.log 2>&1 &          
          
              echo "Deployment complete on EC2." 
          EOF
          echo ">> 애플리케이션 재시작 명령 전송 완료"

          ssh -O exit -o ControlPath="${SSH_CONTROL_PATH}" \
              ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} || true
          echo ">> SSH ControlMaster 소켓 종료"
        env:
          AWS_PAGER: ""